name: Version

on:
  pull_request:
    branches: ["master"]
  push:
    branches: ["master"]
    paths:
    - apparmor.txt
    - '*.json'

env:
  PYTHON_VERSION: "3.7"
  BRANCH_CONDITION: "refs/heads/master"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2
 
    - name: Lint with JQ
      uses: home-assistant/actions/helpers/jq@master

  upload:
    name: Upload
    needs: lint
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2

    - name: Setup Python version ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Get changed files
      id: changed_files
      uses: jitterbit/get-changed-files@v1

    - name: Install AWS CLI
      run: pip install awscli

    - name: Upload files
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESSKEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRETKEY }}
      run: |
        aws s3 sync . s3://hassio-version --exclude "*" --include "*.json" --include "*.txt"
        aws s3 sync . s3://version.home-assistant.io --exclude "*" --include "*.json" --include "*.txt"

    - name: Gather files for cache flush
      id: flush
      run: |
        declare -a files
        for file in ${{ steps.changed_files.outputs.all }}; do
          if [[ "$file" == *.txt ]] || [[ "$file" == *.json ]]; then
            files+=("\"https:\/\/version.home-assistant.io\/$file\", ")
          fi
        done
        echo "::set-output name=files::[$(echo ${files[@]} | rev | cut -c 2- | rev)]"

    - name: Flush CloudFlare cache
      run: |
        curl --silent --show-error --fail -X POST \
          "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE }}/purge_cache" \
          -H "X-Auth-Email: ${{ secrets.CF_EMAIL }}" \
          -H "X-Auth-Key: ${{ secrets.CF_AUTHKEY }}" \
          -H "Content-Type: application/json" \
          --data '{"files": ${{ steps.flush.outputs.files }}}'